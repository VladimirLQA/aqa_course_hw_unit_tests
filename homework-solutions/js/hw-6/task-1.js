/*
1. Цикл for..of в массиве
  - Создайте массив [1,2,3,4,5,6,7,8,9,10]
  - Создайте цикл for..of, бегущий по массиву, в котором будет реализована следующая логика:
    если элемент четный - возведет его в квадрат
    если элемент нечетный - возведет его в 3ю степень

  Значение добавьте в массив 'forOf' 
*/
const forOf = [];

let arr = [1,2,3,4,5,6,7,8,9,10];
for(const i of arr) {
  if(i%2 == 0) {
    forOf.push(Math.pow(i,2));
  } else {
    forOf.push(Math.pow(i,3));
  } 
}
console.log(forOf);

/*
2. Методы массивов
  - Создайте массив [1,2,3,4,5]
  - Добавьте в конец массива число 6 соответствующим методом
  - Добавьте в начало массива число 0 соответствующим методом
  - Удалите элемент с индексом 2 из массива соответствующим методом
  - Удалите последний элемент из массива соответствующим методом

  В результате вы должны получить массив [0, 1, 3, 4, 5], присвойте в переменную "result"
*/

let result;
let arr1 = [1,2,3,4,5];
 arr1.push(6)
 arr1.unshift(0);
 arr1.splice(2, 1);
 arr1.pop();
 result = arr1;
console.log(result );

/*
3. Деструктуризация массивов
  - Создайте массив [3, 11, 32, 7, 20] 
  - Через деструктуризацию получите в новые переменные первый, второй и остальные элементы массива

  Пример: [1,2,3,4,5] => first === 1; second === 2, rest === [3,4,5]
*/

let arr2 = [3, 11, 32, 7, 20];
const [first, second, ...rest] = arr2; 

console.log(`first === ${first}`);   
console.log(`second === ${second}`); 
console.log(`rest === [${rest}]`);   
/*
4. Конкатенация массивов
  - Создайте массив с числами [1,2,3,4,5]
  - Создайте еще 1 массив с числами [6, 7, 8, 9, 10]
  - Используйте спред оператор

  Создайте переменную mergedArray, который будет хранить значения из массивов 1 и 2
*/
let mergedArray;
let array = [1,2,3,4,5];
let array2 = [6, 7, 8, 9, 10];
//mergedArray = array.concat(array2);
mergedArray = [...array, ...array2];
console.log(mergedArray);

export { forOf, result, first, second, rest, mergedArray };
